{"version":3,"sources":["task2.js"],"names":["users","name","active","toggleUserState","allUsers","userName","Promise","resolved","map","user","logger","updatedUsers","console","table","then"],"mappings":";AAGA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IAC1B,IAAIC,QAASC,IAKlBA,EAJqBH,EAASI,IAAIC,GAAQA,EAAKR,OAASI,EACtD,IAAKI,EAAMP,QAASO,EAAKP,QACzBO,MAMAC,EAASC,GAAgBC,QAAQC,MAAMF,GAE7CR,EAAgBH,EAAO,SAASc,KAAKJ,GACrCP,EAAgBH,EAAO,OAAOc,KAAKJ","file":"task2.062483e2.js","sourceRoot":"../src","sourcesContent":["// Перепиши функцию toggleUserState() так, чтобы она не использовала callback-функцию callback,\n// а принимала всего два параметра allUsers и userName и возвращала промис.\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise((resolved) => { \n    const updatedUsers = allUsers.map(user => user.name === userName ?\n      { ...user, active: !user.active } :\n      user,\n    );\n    resolved(updatedUsers)\n  });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);"]}