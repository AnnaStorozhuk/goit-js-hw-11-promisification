{"version":3,"sources":["task1.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";AAKA,MAAMA,EAAQC,GACL,IAAIC,QAAQC,IACjBC,WAAW,KAAOD,EAAQF,IAAMA,KAI9BI,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"task1.0435c1b3.js","sourceRoot":"../src","sourcesContent":["\n// Напиши функцию delay(ms), которая возвращает промис, переходящий \n// в состояние \"resolved\" через ms миллисекунд.Значением исполнившегося промиса \n// должно быть то кол - во миллисекунд которое передали во время вызова функции delay.\n\nconst delay = ms => {\n  return new Promise(resolve => {\n    setTimeout(() => {resolve(ms)}, ms)\n  })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms"]}